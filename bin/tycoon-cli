#!/usr/bin/env python
# -*- encoding: utf-8 -*-
import argparse
import sys
import traceback

from selenium import webdriver
from selenium.webdriver.chrome.options import Options as ChromeOptions
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.chrome.service import Service as ChromiumService

from tycoon.aircraft import Aircraft
from tycoon.long_hauls import LongHauls
from tycoon.circuit import Circuit
from tycoon.seat import Seat
from tycoon.utils import log

parser = argparse.ArgumentParser()
sub_parsers = parser.add_subparsers(help="Sub-commands", dest="command", required=True)


COMMANDS = {
    "aircraft": Aircraft,
    "seat": Seat,
    "long_hauls": LongHauls,
    "circuit": Circuit,
}


if __name__ == "__main__":
    for k, v in COMMANDS.items():
        getattr(v, "options")(sub_parsers)
    options, _ = parser.parse_known_args()
    log.setup(options.debug_mode)
    print(options)
    if options.firefox:
        browser_options = FirefoxOptions()
        browser_options.add_argument("--window-size=1920x1080")
        browser_options.add_argument("--log-level=4")
        if not options.no_headless:
            browser_options.add_argument("--headless")
        driver = webdriver.Firefox(options=browser_options)
    else:
        # manager = ChromeDriverManager(version="107.0.5304.62").install()
        browser_options = ChromeOptions()
        browser_options.add_argument("--window-size=1920x1080")
        browser_options.add_argument("--log-level=4")
        if not options.no_headless:
            browser_options.add_argument("--headless")
        driver = webdriver.Chrome(
            # service=ChromiumService(manager),
            options=browser_options,
        )

    try:
        for k, v in COMMANDS.items():
            if options.command == k:
                getattr(v(driver, options), "run")()

    except Exception:
        traceback.print_exception(*sys.exc_info())
    finally:
        driver.quit()
        print("Done")
